<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Numpy notebook</title>
      <link href="/2018/10/09/Numpy-notebook/"/>
      <url>/2018/10/09/Numpy-notebook/</url>
      <content type="html"><![CDATA[<h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><p>从列表转为Numpy数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">x = np.array(mylist)</span><br><span class="line">x</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([1, 2, 3])</span><br></pre></td></tr></table></figure><p><br><br>或者直接导入数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line">y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([4, 5, 6])</span><br></pre></td></tr></table></figure><p><br><br>传入多位列表构建多位数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">m = np.array([[<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>], [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>]])</span><br><span class="line">m</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array([[ 7,  8,  9],</span><br><span class="line">       [10, 11, 12]])</span><br></pre></td></tr></table></figure><p><br><br>使用<code>shape</code>函数查看数组维数 (行, 列)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m.shape</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(2, 3)</span><br></pre></td></tr></table></figure><p><br><br><code>arange</code> 返回特定区间内的等距值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n = np.arange(<span class="number">0</span>, <span class="number">30</span>, <span class="number">2</span>) <span class="comment"># 从0开始每次增加2知道30前</span></span><br><span class="line">n</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28])</span><br></pre></td></tr></table></figure><p><br><br><code>reshape</code> 返回相同数据内容不同的形状</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n = n.reshape(<span class="number">3</span>, <span class="number">5</span>) <span class="comment"># 调整数组形状为3x5</span></span><br><span class="line">n</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0,  2,  4,  6,  8],</span><br><span class="line">       [10, 12, 14, 16, 18],</span><br><span class="line">       [20, 22, 24, 26, 28]])</span><br></pre></td></tr></table></figure><p><br><br><code>linspace</code> 返回指定区间内的等间隔数.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">o = np.linspace(<span class="number">0</span>, <span class="number">4</span>, <span class="number">9</span>) <span class="comment"># 返回0到4区间内平分的9个数</span></span><br><span class="line">o</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([ 0. ,  0.5,  1. ,  1.5,  2. ,  2.5,  3. ,  3.5,  4. ])</span><br></pre></td></tr></table></figure><p><br><br><code>resize</code> 改变数组的形状和大小(数组内在改变)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">o.resize(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">o</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0. ,  0.5,  1. ],</span><br><span class="line">       [ 1.5,  2. ,  2.5],</span><br><span class="line">       [ 3. ,  3.5,  4. ]])</span><br></pre></td></tr></table></figure><p><br><br><code>ones</code> 返回指定形状数组，元素全为1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.ones((<span class="number">3</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[ 1.,  1.],</span><br><span class="line">       [ 1.,  1.],</span><br><span class="line">       [ 1.,  1.]])</span><br></pre></td></tr></table></figure><p><br><br><code>zeros</code> 返回指定形状数组，元素全为0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.zeros((<span class="number">2</span>, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0.,  0.,  0.],</span><br><span class="line">       [ 0.,  0.,  0.]])</span><br></pre></td></tr></table></figure><p><br><br><code>eye</code> 返回对角为1的对角矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.eye(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[ 1.,  0.,  0.],</span><br><span class="line">       [ 0.,  1.,  0.],</span><br><span class="line">       [ 0.,  0.,  1.]])</span><br></pre></td></tr></table></figure><p><br><br><code>diag</code> 返回特定元素的对角矩阵</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.diag(y)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[4, 0, 0],</span><br><span class="line">       [0, 5, 0],</span><br><span class="line">       [0, 0, 6]])</span><br></pre></td></tr></table></figure><p><br><br>使用重复的列表创建数组 (或者查看 <code>np.tile</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>] * <span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([1, 2, 3, 1, 2, 3, 1, 2, 3])</span><br></pre></td></tr></table></figure><p><br><br>使用 <code>repeat</code>创建重复的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.repeat([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="number">3</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([1, 1, 1, 2, 2, 2, 3, 3, 3])</span><br></pre></td></tr></table></figure><p><br></p><h4 id="数组的合成"><a href="#数组的合成" class="headerlink" title="数组的合成"></a>数组的合成</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p = np.ones([<span class="number">2</span>, <span class="number">3</span>], int)<span class="comment">#指定int类型</span></span><br><span class="line">p</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array([[1, 1, 1],</span><br><span class="line">       [1, 1, 1]])</span><br></pre></td></tr></table></figure><p><br><br>使用 <code>vstack</code>垂直储存合成的数组(按行排列)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.vstack([p, <span class="number">2</span>*p])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array([[1, 1, 1],</span><br><span class="line">       [1, 1, 1],</span><br><span class="line">       [2, 2, 2],</span><br><span class="line">       [2, 2, 2]])</span><br></pre></td></tr></table></figure><p><br><br>使用<code>hstack</code> 水平储存合成的数组(按列排列)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.hstack([p, <span class="number">2</span>*p])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array([[1, 1, 1, 2, 2, 2],</span><br><span class="line">       [1, 1, 1, 2, 2, 2]])</span><br></pre></td></tr></table></figure><p><br></p><h2 id="运算操作"><a href="#运算操作" class="headerlink" title="运算操作"></a>运算操作</h2><p>使用 <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> 或者 <code>**</code>执行加法，减法，乘法，乘法，幂运算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(x + y) <span class="comment"># 数组内元素相加     [1 2 3] + [4 5 6] = [5  7  9]</span></span><br><span class="line">print(x - y) <span class="comment"># 数组内元素相减     [1 2 3] - [4 5 6] = [-3 -3 -3]</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[5 7 9]</span><br><span class="line">[-3 -3 -3]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(x * y) <span class="comment"># 数组内元素相乘     [1 2 3] * [4 5 6] = [4  10  18]</span></span><br><span class="line">print(x / y) <span class="comment"># 数组内元素相除     [1 2 3] / [4 5 6] = [0.25  0.4  0.5]</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[ 4 10 18]</span><br><span class="line">[ 0.25  0.4   0.5 ]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(x**<span class="number">2</span>) <span class="comment"># 数组内元素进行2的幂操作  [1 2 3] ^2 =  [1 4 9]</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1 4 9]</span><br></pre></td></tr></table></figure><p><br><br><strong>点积:</strong>  </p><p>$ \begin{bmatrix}x_1 \ x_2 \ x_3\end{bmatrix}<br>\cdot<br>\begin{bmatrix}y_1 \ y_2 \ y_3\end{bmatrix}<br>= x_1 y_1 + x_2 y_2 + x_3 y_3$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.dot(y) <span class="comment"># 点积  1*4 + 2*5 + 3*6</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">32</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z = np.array([y, y**<span class="number">2</span>])</span><br><span class="line">print(len(z)) <span class="comment"># 数组的行数</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><br><br>转置数组会导致数组的维数重新排列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z = np.array([y, y**<span class="number">2</span>])</span><br><span class="line">z</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array([[ 4,  5,  6],</span><br><span class="line">       [16, 25, 36]])</span><br></pre></td></tr></table></figure><p><br><br>在为转置前，数组 <code>z</code> 的形状是 <code>(2,3)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z.shape</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(2, 3)</span><br></pre></td></tr></table></figure><p><br><br>使用 <code>.T</code> 对其进行转置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z.T</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[ 4, 16],</span><br><span class="line">       [ 5, 25],</span><br><span class="line">       [ 6, 36]])</span><br></pre></td></tr></table></figure><p><br><br>行数与列数进行了交换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z.T.shape</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(3, 2)</span><br></pre></td></tr></table></figure><p><br><br>使用<code>.dtype</code>查看数组内元素的类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z.dtype</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtype(&apos;int64&apos;)</span><br></pre></td></tr></table></figure><p><br><br>使用 <code>.astype</code>转换为特定类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">z = z.astype(<span class="string">'f'</span>)</span><br><span class="line">z.dtype</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dtype(&apos;float32&apos;)</span><br></pre></td></tr></table></figure><p><br></p><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><p>Numpy有很多内建的函数可以利用到数组上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a = np.array([<span class="number">-4</span>, <span class="number">-2</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.sum()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.max()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.min()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-4</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.mean()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0.60</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.std()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.26</span><br></pre></td></tr></table></figure><p><br><br><code>argmax</code> 和 <code>argmin</code> 会返回最大值或最小值的索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.argmax()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.argmin()</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p><br></p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = np.arange(<span class="number">13</span>)**<span class="number">2</span></span><br><span class="line">s</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([  0,   1,   4,   9,  16,  25,  36,  49,  64,  81, 100, 121, 144])</span><br></pre></td></tr></table></figure><p><br><br>使用括号符号获取特定索引处的值，索引从0开始</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[<span class="number">0</span>], s[<span class="number">4</span>], s[<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(0, 16, 144)</span><br></pre></td></tr></table></figure><p><br><br>使用 <code>:</code> 指示选取范围<code>array[start:stop]</code></p><p>如果 <code>start</code> 或者 <code>stop</code> 为空则会默认为数组的开始结尾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[<span class="number">1</span>:<span class="number">5</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([ 1,  4,  9, 16])</span><br></pre></td></tr></table></figure><p><br><br>使用<code>-</code>表示从结尾开始计数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[<span class="number">-4</span>:]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([ 81, 100, 121, 144])</span><br></pre></td></tr></table></figure><p><br><br>使用两个 <code>:</code> 可以用来指示步数. <code>array[start:stop:stepsize]</code></p><p>从倒数第5个元素开始，从后往前间隔2个单元往回计算直到开始元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s[<span class="number">-5</span>::<span class="number">-2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([64, 36, 16,  4,  0])</span><br></pre></td></tr></table></figure><p><br><br>如下创建一个多位数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r = np.arange(<span class="number">36</span>)</span><br><span class="line">r.resize((<span class="number">6</span>, <span class="number">6</span>))</span><br><span class="line">r</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0,  1,  2,  3,  4,  5],</span><br><span class="line">       [ 6,  7,  8,  9, 10, 11],</span><br><span class="line">       [12, 13, 14, 15, 16, 17],</span><br><span class="line">       [18, 19, 20, 21, 22, 23],</span><br><span class="line">       [24, 25, 26, 27, 28, 29],</span><br><span class="line">       [30, 31, 32, 33, 34, 35]])</span><br></pre></td></tr></table></figure><p><br><br>使用括号获取数据<code>array[row, column]</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r[<span class="number">2</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><p><br><br>使用<code>:</code> 选择行的区间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r[<span class="number">3</span>, <span class="number">3</span>:<span class="number">6</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([21, 22, 23])</span><br></pre></td></tr></table></figure><p><br><br>如下选择前两行(不包括2行) ，以及数据最后一列之前的元素 (不包括最后一列) </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r[:<span class="number">2</span>, :<span class="number">-1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0,  1,  2,  3,  4],</span><br><span class="line">       [ 6,  7,  8,  9, 10]])</span><br></pre></td></tr></table></figure><p><br><br>这是最后一行的一部分，而且只包括所有其他元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r[<span class="number">-1</span>, ::<span class="number">2</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([30, 32, 34])</span><br></pre></td></tr></table></figure><p><br><br>也可以使用有条件的索引，在这里选择大于30的数据(也可以查看 <code>np.where</code>)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r[r &gt; <span class="number">30</span>]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array([31, 32, 33, 34, 35])</span><br></pre></td></tr></table></figure><p><br><br>这里，我们将数组中大于30的值赋值为30</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r[r &gt; <span class="number">30</span>] = <span class="number">30</span></span><br><span class="line">r</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0,  1,  2,  3,  4,  5],</span><br><span class="line">       [ 6,  7,  8,  9, 10, 11],</span><br><span class="line">       [12, 13, 14, 15, 16, 17],</span><br><span class="line">       [18, 19, 20, 21, 22, 23],</span><br><span class="line">       [24, 25, 26, 27, 28, 29],</span><br><span class="line">       [30, 30, 30, 30, 30, 30]])</span><br></pre></td></tr></table></figure><p><br></p><h2 id="拷贝数据"><a href="#拷贝数据" class="headerlink" title="拷贝数据"></a>拷贝数据</h2><p>在使用NumPy时拷贝数据要小心!</p><p><code>r2</code> 是 <code>r</code>的子数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r2 = r[:<span class="number">3</span>,:<span class="number">3</span>]</span><br><span class="line">r2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0,  1,  2],</span><br><span class="line">       [ 6,  7,  8],</span><br><span class="line">       [12, 13, 14]])</span><br></pre></td></tr></table></figure><p><br><br>将r2的所有元素设置为0 ([:]选择整个数组)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r2[:] = <span class="number">0</span></span><br><span class="line">r2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array([[0, 0, 0],</span><br><span class="line">       [0, 0, 0],</span><br><span class="line">       [0, 0, 0]])</span><br></pre></td></tr></table></figure><p><br><br><code>r</code> 也跟着改变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0,  0,  0,  3,  4,  5],</span><br><span class="line">       [ 0,  0,  0,  9, 10, 11],</span><br><span class="line">       [ 0,  0,  0, 15, 16, 17],</span><br><span class="line">       [18, 19, 20, 21, 22, 23],</span><br><span class="line">       [24, 25, 26, 27, 28, 29],</span><br><span class="line">       [30, 30, 30, 30, 30, 30]])</span><br></pre></td></tr></table></figure><p><br><br>要想避免出错，可以使用 <code>r.copy</code> 去创建一个副本，不会影响原本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r_copy = r.copy()</span><br><span class="line">r_copy</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array([[ 0,  0,  0,  3,  4,  5],</span><br><span class="line">       [ 0,  0,  0,  9, 10, 11],</span><br><span class="line">       [ 0,  0,  0, 15, 16, 17],</span><br><span class="line">       [18, 19, 20, 21, 22, 23],</span><br><span class="line">       [24, 25, 26, 27, 28, 29],</span><br><span class="line">       [30, 30, 30, 30, 30, 30]])</span><br></pre></td></tr></table></figure><p><br><br><code>r_copy</code>更改以后<code>r</code>并不会改变</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r_copy[:] = <span class="number">10</span></span><br><span class="line">print(r_copy, <span class="string">'\n'</span>)</span><br><span class="line">print(r)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[[10 10 10 10 10 10]</span><br><span class="line"> [10 10 10 10 10 10]</span><br><span class="line"> [10 10 10 10 10 10]</span><br><span class="line"> [10 10 10 10 10 10]</span><br><span class="line"> [10 10 10 10 10 10]</span><br><span class="line"> [10 10 10 10 10 10]] </span><br><span class="line"></span><br><span class="line">[[ 0  0  0  3  4  5]</span><br><span class="line"> [ 0  0  0  9 10 11]</span><br><span class="line"> [ 0  0  0 15 16 17]</span><br><span class="line"> [18 19 20 21 22 23]</span><br><span class="line"> [24 25 26 27 28 29]</span><br><span class="line"> [30 30 30 30 30 30]]</span><br></pre></td></tr></table></figure><p><br></p><h2 id="遍历整个数组"><a href="#遍历整个数组" class="headerlink" title="遍历整个数组"></a>遍历整个数组</h2><p>我们创建一个4乘3在0-9间的数组.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test = np.random.randint(<span class="number">0</span>, <span class="number">10</span>, (<span class="number">4</span>,<span class="number">3</span>))</span><br><span class="line">test</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array([[2, 8, 2],</span><br><span class="line">       [0, 8, 5],</span><br><span class="line">       [3, 8, 6],</span><br><span class="line">       [2, 4, 1]])</span><br></pre></td></tr></table></figure><p><br><br>通过行遍历</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> test:</span><br><span class="line">    print(row)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[2 8 2]</span><br><span class="line">[0 8 5]</span><br><span class="line">[3 8 6]</span><br><span class="line">[2 4 1]</span><br></pre></td></tr></table></figure><p><br><br>通过索引遍历</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(test)):</span><br><span class="line">    print(test[i])</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[2 8 2]</span><br><span class="line">[0 8 5]</span><br><span class="line">[3 8 6]</span><br><span class="line">[2 4 1]</span><br></pre></td></tr></table></figure><p><br><br>通过索引和行遍历</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, row <span class="keyword">in</span> enumerate(test):</span><br><span class="line">    print(<span class="string">'row'</span>, i, <span class="string">'is'</span>, row)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">row 0 is [2 8 2]</span><br><span class="line">row 1 is [0 8 5]</span><br><span class="line">row 2 is [3 8 6]</span><br><span class="line">row 3 is [2 4 1]</span><br></pre></td></tr></table></figure><p><br><br>使用<code>zip</code>遍历多个数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test2 = test**<span class="number">2</span></span><br><span class="line">test2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array([[ 4, 64,  4],</span><br><span class="line">       [ 0, 64, 25],</span><br><span class="line">       [ 9, 64, 36],</span><br><span class="line">       [ 4, 16,  1]])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, j <span class="keyword">in</span> zip(test, test2):</span><br><span class="line">    print(i,<span class="string">'+'</span>,j,<span class="string">'='</span>,i+j)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[2 8 2] + [ 4 64  4] = [ 6 72  6]</span><br><span class="line">[0 8 5] + [ 0 64 25] = [ 0 72 30]</span><br><span class="line">[3 8 6] + [ 9 64 36] = [12 72 42]</span><br><span class="line">[2 4 1] + [ 4 16  1] = [ 6 20  2]</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Numpy </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Word Power Made Easy(part 6)</title>
      <link href="/2018/10/07/Word-Power-Made-Easy-part-6/"/>
      <url>/2018/10/07/Word-Power-Made-Easy-part-6/</url>
      <content type="html"><![CDATA[<h2 id="Session-19"><a href="#Session-19" class="headerlink" title="Session 19"></a>Session 19</h2><h3 id="描述行为的十种动词"><a href="#描述行为的十种动词" class="headerlink" title="描述行为的十种动词"></a>描述行为的十种动词</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">英文</th><th style="text-align:center">中文</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">disparage</td><td style="text-align:center">贬低</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">equivocate</td><td style="text-align:center">含糊其辞</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">titillate</td><td style="text-align:center">撩起</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">adulate</td><td style="text-align:center">奉承</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">proscribe</td><td style="text-align:center">禁止</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">obviate</td><td style="text-align:center">消除</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">militate</td><td style="text-align:center">妨碍</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">malign</td><td style="text-align:center">诽谤</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">condone</td><td style="text-align:center">宽恕</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">placate</td><td style="text-align:center">抚慰</td></tr></tbody></table><h2 id="Session-20"><a href="#Session-20" class="headerlink" title="Session 20"></a>Session 20</h2><h3 id="1-equality"><a href="#1-equality" class="headerlink" title="1. equality"></a>1. equality</h3><p><strong>par</strong>(equal) -&gt; </p><ul><li>parity(平等)</li><li>peer(同地位的)</li><li>pair(一对)</li></ul><p><strong>dis-</strong>(negative) + par -&gt; disparage(轻视)</p><p>disparagement(n.), disparaging(adj.)</p><p>dis- + par(equal) -&gt; disparity(差距, 不同)</p><p><strong>con/com-</strong>(together) + par -&gt; compare(比较)</p><p>comparable(比得上的, 相似的), comparative(比较的, 相对的)</p><h3 id="2-how-to-say-yes-and-no"><a href="#2-how-to-say-yes-and-no" class="headerlink" title="2. how to say yes and no"></a>2. how to say yes and no</h3><p><strong>equ/aequns</strong>(equal) + <strong>vox/vocis</strong>(voice) -&gt; equivocate(含糊其辞)</p><p>equivocal(adj.), unequivocal(adj.)</p><h3 id="3-statement-of-various-kinds"><a href="#3-statement-of-various-kinds" class="headerlink" title="3. statement of various kinds"></a>3. statement of various kinds</h3><p><strong>ambi</strong>(both) +<strong>agre</strong>(to drive) -&gt; ambiguous(有歧义的)</p><p>ambiguity(n.)</p>]]></content>
      
      
        <tags>
            
            <tag> English Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Word Power Made Easy(part 5)</title>
      <link href="/2018/09/23/Word-Power-Made-Easy-part-5/"/>
      <url>/2018/09/23/Word-Power-Made-Easy-part-5/</url>
      <content type="html"><![CDATA[<h2 id="Session-14"><a href="#Session-14" class="headerlink" title="Session 14"></a>Session 14</h2><p>选择十个形容词</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">英文</th><th style="text-align:center">中文</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">notorious</td><td style="text-align:center">臭名昭著的</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">consummate</td><td style="text-align:center">精湛的</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">incorrigible</td><td style="text-align:center">无可救药的</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">inveterate</td><td style="text-align:center">成瘾的</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">congenital</td><td style="text-align:center">天生的</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">chronic</td><td style="text-align:center">习惯性的</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">pathological</td><td style="text-align:center">精神错乱的</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">unconscionable</td><td style="text-align:center">没有良心的</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">glib</td><td style="text-align:center">口齿伶俐的</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">egregious</td><td style="text-align:center">过分的</td></tr></tbody></table><h2 id="Session-15"><a href="#Session-15" class="headerlink" title="Session 15"></a>Session 15</h2><h3 id="1-well-know"><a href="#1-well-know" class="headerlink" title="1. well-know"></a>1. well-know</h3><p><strong>notus</strong>(known) + -ous -&gt; notorious(臭名昭著的)</p><p>notoriety(恶名)</p><h3 id="2-plenty-of-room-at-the-top"><a href="#2-plenty-of-room-at-the-top" class="headerlink" title="2. plenty of room at the top"></a>2. plenty of room at the top</h3><p><strong>summus</strong>(highest) -&gt; summit(top/highest, 山顶)</p><p>sum(总和)</p><p><strong>con-</strong>(altogether) + summus(highest) -&gt; consummate(精湛的)</p><p>adj. + <strong>-ness</strong>(名词后缀) -&gt; n.</p><ul><li>sweet -&gt; sweetness</li><li>simple -&gt; simpleness</li><li>envious -&gt; eviousness</li></ul><p>comsummate + -ness/-acy -&gt; consummateness/consummacy</p><p>-ate(v.) + <strong>-ion</strong>(名次后缀) -&gt; n.</p><ul><li>create -&gt; creation</li><li>evaluate -&gt; evaluation </li></ul><h3 id="3-no-help"><a href="#3-no-help" class="headerlink" title="3. no help"></a>3. no help</h3><p><strong>in-</strong>(not) + <strong>corrigo</strong>(to correct, set straight) -&gt; incorrigible(无可救药的)</p><p>incorrigibility(n.), incorrigibleness(adj.)</p><h3 id="4-veterans"><a href="#4-veterans" class="headerlink" title="4. veterans"></a>4. veterans</h3><p><strong>in-</strong>(in) + <strong>vetus</strong>(old) -&gt; inveterate(成瘾的)</p><p><strong>senex</strong>(old) -&gt; </p><ul><li>senile(衰老的)</li><li>senescent(衰老)</li></ul><p>veteran(n. 老兵/老手, adj. 熟练的)</p><h3 id="5-birth"><a href="#5-birth" class="headerlink" title="5. birth"></a>5. birth</h3><p>psyche + <strong>genesis</strong>(birth, origin) -&gt; psychogenic(心因性)</p><p>genesis(birth, origin) -&gt; </p><ul><li><p>genetics(遗传学)</p></li><li><p>geneticist(遗传学家)</p></li><li><p>genetic(基因的)</p></li><li><p>gene(基因)</p></li></ul><p>genesis + logos -&gt; genealogy(家谱学)</p><p>genealogist(~家), genealogical(~的)</p><p>con-(together) + genesis(birth, origin) + al -&gt; congenital(先天的)</p><p><strong>hered-</strong>(heir) -&gt; hereditary(遗传的)</p><h2 id="Session-16"><a href="#Session-16" class="headerlink" title="Session 16"></a>Session 16</h2><h3 id="1-of-the-time-and-place"><a href="#1-of-the-time-and-place" class="headerlink" title="1. of the time and place"></a>1. of the time and place</h3><p><strong>chro-</strong>(time) -&gt; chronic(慢性的)</p><p>chronicity(慢性)</p><p><strong>ana-</strong>(a-, negative) + chro-(time) -&gt; anachronism(落伍的人/物, 时代错误)</p><p>anachronous(~的), anachronistic(~的)</p><p><strong>in-</strong>(not) + <strong>con-</strong>(together) + <strong>gruous</strong>(agree, correspond) -&gt; incongruous(不协调的)</p><p>incongruity(n.)</p><p>chronos + logos -&gt; chronological(按时间先后顺序排列的)</p><p>chronology(年表, 年代学), chronologist(年代学者)</p><p>chronos + <strong>metron</strong> -&gt; chronometer(精密计时器)</p><p>chronometry(记时法), chronometric(记时, ~的)</p><p><strong>syn-</strong>(together) + chronos- + <strong>-ize</strong>(v.) -&gt; synchronize(使同步)</p><p>synchronous(adj.), synchronization(n.)</p><h3 id="2-disease-suffering-feeling"><a href="#2-disease-suffering-feeling" class="headerlink" title="2. disease, suffering, feeling"></a>2. disease, suffering, feeling</h3><p>pathological(患病的)</p><p>pathology(病理学)</p><p>pathologist(病理学家)</p><p><strong>sym-</strong>(=syn-) + pathos(feeling) -&gt; sympathy(同情)</p><p>sympathize(v.), sympathetic(adj.)</p><p><strong>anti-</strong> + pathos -&gt; antipathy(反感)</p><p>antipathetic(adj.)</p><p><strong>a-</strong>(negative) + pathos -&gt; apathy(冷淡)</p><p>apathetic(冷淡的)</p><p><strong>em/en-</strong>(in) + pathos -&gt; empathy(同感)</p><p>empathize(v.), empathetic(adj.) = empathic</p><p>pathetic(可怜的)</p><p><strong>tele-</strong> + pathos -&gt; telepathy(心灵感应交流)</p><h2 id="Session-17"><a href="#Session-17" class="headerlink" title="Session 17"></a>Session 17</h2><h3 id="1-knowing"><a href="#1-knowing" class="headerlink" title="1. knowing"></a>1. knowing</h3><p><strong>un</strong> + <strong>con-</strong>(together) + <strong>scio</strong>(to know) + able -&gt; unconscionable(不合理的)</p><p>unconscionableness(n.), unconscionability(n.)</p><p>con-(together) + <strong>sciens</strong>(knowing) -&gt; conscience(良心)</p><p>con- + scio(to know) -&gt; conscious(有意识的)</p><p>sciens -&gt; science(科学)</p><p><strong>omnis</strong>(all) + sciens -&gt; omniscient(无所不知的)</p><p>omniscience(全知)</p><p><strong>pre-</strong>(before) + sciens -&gt; prescient(有预知能力的)</p><p>prescience(预知)</p><p><strong>ne-</strong>(negative) + sciens -&gt; nescient(无知的)</p><p>nescience(无知)</p><h3 id="2-fool-some-of-the-people"><a href="#2-fool-some-of-the-people" class="headerlink" title="2. fool some of the people"></a>2. fool some of the people</h3><p><strong>glib</strong>(slippery, 油腔滑调)</p><p>glibness(油腔滑调的)</p><h3 id="3-herds-and-flocks"><a href="#3-herds-and-flocks" class="headerlink" title="3. herds and flocks"></a>3. herds and flocks</h3><p><strong>e/ex-</strong>(out) + <strong>grex/gregis</strong>(herd or flock) -&gt; egregious(过分的)</p><p>egregiousness(过分)</p><p>grex/gregis -&gt; gregarious(社交的,群居的)</p><p>gregarious<strong>ness</strong>(社交, 群居)</p><p>con- + grex/gregis -&gt; congregate(聚集)</p><p><strong>se-</strong>(apart) + grex/gregis -&gt; segregate(隔离)</p><p><strong>ad-</strong>(to, toward) + grex/gregis -&gt; aggregate(总数, 聚集)</p><h2 id="Prefix-Root-Suffix"><a href="#Prefix-Root-Suffix" class="headerlink" title="Prefix, Root, Suffix"></a>Prefix, Root, Suffix</h2><table><thead><tr><th style="text-align:left"></th><th></th><th></th><th style="text-align:left"></th><th></th><th></th></tr></thead><tbody><tr><td style="text-align:left"><strong>1</strong></td><td>ad-, ag-</td><td>to, toward</td><td style="text-align:left"><strong>16</strong></td><td>omnis</td><td>all</td></tr><tr><td style="text-align:left"><strong>2</strong></td><td>ana-, a-</td><td>negative prefix</td><td style="text-align:left"><strong>17</strong></td><td>pathos</td><td>disease, suffering, feeling</td></tr><tr><td style="text-align:left"><strong>3</strong></td><td>anti-</td><td>against</td><td style="text-align:left"><strong>18</strong></td><td>pre-</td><td>before</td></tr><tr><td style="text-align:left"><strong>4</strong></td><td>chronos</td><td>time</td><td style="text-align:left"><strong>19</strong></td><td>sciens</td><td>knowing</td></tr><tr><td style="text-align:left"><strong>5</strong></td><td>con-</td><td>with, together</td><td style="text-align:left"><strong>20</strong></td><td>scio</td><td>to know</td></tr><tr><td style="text-align:left"><strong>6</strong></td><td>corrigo</td><td>to correct, set straight</td><td style="text-align:left"><strong>21</strong></td><td>se-</td><td>apart</td></tr><tr><td style="text-align:left"><strong>7</strong></td><td>e-, ex-</td><td>out</td><td style="text-align:left"><strong>22</strong></td><td>senex</td><td>old</td></tr><tr><td style="text-align:left"><strong>8</strong></td><td>en-, em</td><td>in</td><td style="text-align:left"><strong>23</strong></td><td>summus</td><td>highest</td></tr><tr><td style="text-align:left"><strong>9</strong></td><td>genesis</td><td>birth, origin</td><td style="text-align:left"><strong>24</strong></td><td>syn-, sym-</td><td>with, together</td></tr><tr><td style="text-align:left"><strong>10</strong></td><td>grex, gregis</td><td>herd, flock</td><td style="text-align:left"><strong>25</strong></td><td>tele-</td><td>distance</td></tr><tr><td style="text-align:left"><strong>11</strong></td><td>in-</td><td>negative prefix</td><td style="text-align:left"><strong>26</strong></td><td>un-</td><td>negative prefix</td></tr><tr><td style="text-align:left"><strong>12</strong></td><td>logos</td><td>science, study</td><td style="text-align:left"><strong>27</strong></td><td>vetus</td><td>old</td></tr><tr><td style="text-align:left"><strong>13</strong></td><td>metron</td><td>measurement</td><td style="text-align:left"><strong>28</strong></td><td>-ion</td><td>noun suffix added to verbs</td></tr><tr><td style="text-align:left"><strong>14</strong></td><td>ne-</td><td>negative prefix</td><td style="text-align:left"><strong>29</strong></td><td>-ize</td><td>verb suffix</td></tr><tr><td style="text-align:left"><strong>15</strong></td><td>notus</td><td>known</td><td style="text-align:left"><strong>30</strong></td><td>-ness</td><td>noun suffix</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> English Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Word Power Made Easy(part 4)</title>
      <link href="/2018/09/19/Word-Power-Made-Easy-part-4/"/>
      <url>/2018/09/19/Word-Power-Made-Easy-part-4/</url>
      <content type="html"><![CDATA[<h2 id="Session-11"><a href="#Session-11" class="headerlink" title="Session 11"></a>Session 11</h2><h3 id="选择十类科学家"><a href="#选择十类科学家" class="headerlink" title="选择十类科学家"></a>选择十类科学家</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">英文</th><th style="text-align:center">中文</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">anthropologist</td><td style="text-align:center">人类学家</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">astronomer</td><td style="text-align:center">天文学家</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">geologist</td><td style="text-align:center">地质学家</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">biologist</td><td style="text-align:center">生物学家</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">botanist</td><td style="text-align:center">植物学家</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">zoologist</td><td style="text-align:center">动物学家</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">entomologist</td><td style="text-align:center">昆虫学家</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">philologist</td><td style="text-align:center">语文学家</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">semanticist</td><td style="text-align:center">语意学家</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">sciologist</td><td style="text-align:center">社会学家</td></tr></tbody></table><h2 id="Session-12"><a href="#Session-12" class="headerlink" title="Session 12"></a>Session 12</h2><h3 id="1-people-and-the-star"><a href="#1-people-and-the-star" class="headerlink" title="1. people and the star"></a>1. people and the star</h3><p><strong>anthropos</strong>(mankind) + <strong>logos</strong>(science) -&gt; anthropologist(人类学家)</p><p><strong>astron</strong>(star) + <strong>nomos</strong>(arrangement, law, order) -&gt; astronomer(天文学家)</p><p>Astronomy(天文学), astronomical(天文学的)</p><p>astron(star) + logos(science) -&gt; astrology(占星术)</p><p>astrologer(占星家), astrological(~的)</p><p>astron(star) + <strong>nautes</strong>(sailor, 水手) -&gt; astronaut(宇航员)</p><p><strong>kosmos</strong>(universe) + nautes(sailor, 水手) -&gt; cosmonaut(宇航员)</p><p>nautes(sailor, 水手)  -&gt; nautical(航海的)</p><p><strong>naus</strong>(ship) -&gt; nausea(晕船)</p><p>aster(星状花朵)</p><p>asterisk(星状标记*)</p><p>astron(star) + physics(物理) -&gt; astrophysics(天文物理学)</p><p><strong>dis-</strong>(against) + astron(star) -&gt; disaster(灾难)</p><p>disastrous(灾难性的)</p><p><strong>auto</strong>(self) + nomos(arrangement) -&gt; autonomy(自治)</p><p>autonomous(~的)</p><p><strong>metron</strong>(measurement) + nomos(arrangement) -&gt; metronome(节拍器)</p><h3 id="2-the-earth-and-its-life"><a href="#2-the-earth-and-its-life" class="headerlink" title="2. the earth and its life"></a>2. the earth and its life</h3><p><strong>ge/geo-</strong>(earth) + logos(science) -&gt; geology(地质学)</p><p>geologist(~家), geological(~的)</p><p>ge(earth) + metron(measurement) -&gt; geometry(几何学)</p><p>geometrician(~家), geometric(~的, adj.)</p><p>ge(earth) + <strong>graphein</strong>(to write) -&gt; geography(地理学)</p><p>geographer(~家), geographic(~的)</p><p><strong>bios</strong>(life) + logos(science) -&gt; biologist(生物学家)</p><p>biological(生物的)</p><p>biography(传记)</p><p>auto(self) + biography -&gt; autobiography(自传)</p><p>bios(life) + <strong>opsis/optikos</strong>(view) -&gt; biopsy(活检)</p><p>auto(self) + opsis/optikos(view) -&gt; autopsy(尸体解剖)</p><p><strong>botane</strong>(plant) + -ist -&gt; botanist(植物学家)</p><p>botany(植物学), botanical(植物学的)</p><p>zoion(animal) + logos(science) -&gt; zoologist(动物学家)</p><p>zoology(动物学), zoological(动物学的)</p><h2 id="Session-13"><a href="#Session-13" class="headerlink" title="Session 13"></a>Session 13</h2><h3 id="1-cutting-in-and-out"><a href="#1-cutting-in-and-out" class="headerlink" title="1. cutting in and out"></a>1. cutting in and out</h3><p><strong>en-</strong>(in) + <strong>tome</strong>(a cutting) -&gt; entomology(昆虫学)</p><p>entomological(~的)</p><p><strong>in-</strong>(in) + <strong>sectus</strong>(cut) -&gt; insect(昆虫)</p><p><strong>ec-</strong>(out) + tome(a cutting) -&gt; “cut out” or removed</p><ul><li>tonsillectomy(the tonsils)</li><li>appendectomy(the appendix)</li><li>mastectomy(the breast)</li></ul><p>ec-(out) + <strong>kentron</strong>(centrum) -&gt; eccentric(out of center, 偏离正常的)</p><p>eccentricity(古怪)</p><h3 id="2-more-cuts"><a href="#2-more-cuts" class="headerlink" title="2. more cuts"></a>2. more cuts</h3><p><strong>a-</strong>(negative) + tome(a cutting) -&gt; atom(原子)</p><p>atomic(原子的)</p><p><strong>ana-</strong>(up) + tome(a cutting) -&gt; anatomy(解剖学)</p><p>anatomical(~的)</p><p>tome(指可以分册，非常厚、大的书)</p><p><strong>dicha-</strong>(two) + tome(a cutting) -&gt; dichotomy(一分为二)</p><p>dichotomize(v), dichotomous(adj.)</p><p><strong>epi-</strong>(upon) + tome(a cutting) -&gt; epitome(缩影)</p><p>epitomize(v, 成为…典范)</p><h3 id="3-love-and-words"><a href="#3-love-and-words" class="headerlink" title="3. love and words"></a>3. love and words</h3><p><strong>philein</strong>(to love) + <strong>logos</strong>(<strong><em>word</em></strong>, speech, science) -&gt; philology(语文学)</p><p><strong>lingua</strong>(舌头) + -ist + ic -&gt; linguistics(语言学的)</p><h3 id="4-more-love"><a href="#4-more-love" class="headerlink" title="4. more love"></a>4. more love</h3><p>philein(to love) + <strong>anthropos</strong>(mankind) -&gt; philanthropy(慈善)</p><p>philanthropist(~家), philanthropic(~的)</p><p>philein + <strong>andros</strong>(male, man) -&gt; philander(玩弄女性)</p><p>philanderer(玩弄女性者)</p><p>philein + <strong>sophos</strong>(wise) -&gt; philosophy(哲学)</p><p>philein + <strong>adelphos</strong>(brother) -&gt; philadelphia(费城, 兄弟之爱之城)</p><p>philein + <strong>harmonia</strong>(harmony) -&gt; philharmonic(爱音乐的)</p><p><strong>biblion</strong>(book) + philein -&gt; bibliophile(书籍爱好者)</p><p><strong>anglus</strong>(English) + philein -&gt; Anglophile(崇拜英国的人)</p><h3 id="5-words-and-how-they-affect-people"><a href="#5-words-and-how-they-affect-people" class="headerlink" title="5. words and how they affect people"></a>5. words and how they affect people</h3><p><strong>sema</strong>(sigh) -&gt; semantic(语义的) -&gt; semantics(语义学)</p><ul><li>semantics</li><li>orthopedics</li><li>pediatrics</li></ul><p>虽然以-s结尾，但都为单数形式</p><h3 id="6-how-people-live"><a href="#6-how-people-live" class="headerlink" title="6. how people live"></a>6. how people live</h3><p><strong>socius</strong>(companion) + logos -&gt; sociology(社会学)</p><ul><li>social(社会性的), socialize(交际)</li><li>society(社会), sociable(好交际的, 社交的)</li><li>associate(<strong>ad-</strong> to, 联系)</li><li>antisocial(<strong>anti-</strong> against, 反社会的、令人讨厌的)</li><li>asocial(a-. negative, 不合群的、自私的)</li></ul><h2 id="Prefix-Root-Suffix"><a href="#Prefix-Root-Suffix" class="headerlink" title="Prefix, Root, Suffix"></a>Prefix, Root, Suffix</h2><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>1</strong></td><td>a-</td><td>not, negative</td><td><strong>18</strong></td><td>graphein</td><td>to write</td></tr><tr><td><strong>2</strong></td><td>ad-</td><td>to</td><td><strong>19</strong></td><td>in-</td><td>in</td></tr><tr><td><strong>3</strong></td><td>adelphos</td><td>brother</td><td><strong>20</strong></td><td>kentron (centrum)</td><td>center</td></tr><tr><td><strong>4</strong></td><td>ana-</td><td>up</td><td><strong>21</strong></td><td>lingua</td><td>tongue</td></tr><tr><td><strong>5</strong></td><td>Anglus</td><td>English</td><td><strong>22</strong></td><td>logos</td><td>science, study</td></tr><tr><td><strong>6</strong></td><td>anthropos</td><td>mankind</td><td><strong>23</strong></td><td>logos</td><td>word, speech</td></tr><tr><td><strong>7</strong></td><td>anti-</td><td>against</td><td><strong>24</strong></td><td>metron</td><td>measurement</td></tr><tr><td><strong>8</strong></td><td>astron</td><td>star</td><td><strong>25</strong></td><td>naus</td><td>ship</td></tr><tr><td><strong>9</strong></td><td>autos</td><td>self</td><td><strong>26</strong></td><td>nautes</td><td>sailor</td></tr><tr><td><strong>10</strong></td><td>biblion</td><td>book</td><td><strong>27</strong></td><td>nomos</td><td>arrangement, law, order</td></tr><tr><td><strong>11</strong></td><td>bios</td><td>life</td><td><strong>28</strong></td><td>opsis, optikos</td><td>view, vision, sight</td></tr><tr><td><strong>12</strong></td><td>botane</td><td>plant</td><td><strong>29</strong></td><td>philein</td><td>to love</td></tr><tr><td><strong>13</strong></td><td>dicha-</td><td>in two</td><td><strong>30</strong></td><td>sectus</td><td>cut</td></tr><tr><td><strong>14</strong></td><td>dis-</td><td>against</td><td><strong>31</strong></td><td>socius</td><td>companion</td></tr><tr><td><strong>15</strong></td><td>en-</td><td>in</td><td><strong>32</strong></td><td>sophos</td><td>wise</td></tr><tr><td><strong>16</strong></td><td>epi-</td><td>on, upon</td><td><strong>33</strong></td><td>tome</td><td>a cutting</td></tr><tr><td><strong>17</strong></td><td>ge (geo-)</td><td>earth</td><td><strong>34</strong></td><td>zoion</td><td>animal</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> English Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Word Power Made Easy(part 3)</title>
      <link href="/2018/09/14/Word-Power-Made-Easy-part-3/"/>
      <url>/2018/09/14/Word-Power-Made-Easy-part-3/</url>
      <content type="html"><![CDATA[<h2 id="Session-7"><a href="#Session-7" class="headerlink" title="Session 7"></a>Session 7</h2><h3 id="选择十类从业者"><a href="#选择十类从业者" class="headerlink" title="选择十类从业者"></a>选择十类从业者</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">英文</th><th style="text-align:center">中文</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">psychologist</td><td style="text-align:center">心理学家</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">psychoanalyst</td><td style="text-align:center">心里分析家</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">orthodontist</td><td style="text-align:center">牙齿矫正医师</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">optometrist</td><td style="text-align:center">验光技师</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">optician</td><td style="text-align:center">配置眼镜技师</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">osteopath</td><td style="text-align:center">正骨医师</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">chiropractor</td><td style="text-align:center">按摩技师</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">podiatrist</td><td style="text-align:center">足科医生</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">graphologist</td><td style="text-align:center">笔迹学家</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">gerontologist</td><td style="text-align:center">老年问题专家</td></tr></tbody></table><h2 id="Session-8"><a href="#Session-8" class="headerlink" title="Session 8"></a>Session 8</h2><h3 id="1-the-mental-life"><a href="#1-the-mental-life" class="headerlink" title="1. the mental life"></a>1. the mental life</h3><p>psyche(心里生活, 心灵)</p><p>psychic(超自然的, 有特异功能的)</p><p><strong>psyche</strong>(spirit, soul ,mind) + <strong>logos</strong>(science) -&gt; psychology(心理学)</p><p>psychologist(~家), psychological(~的)</p><p>psyche+ <strong>pathos</strong>(suffering, disease) -&gt; psychopathy(心理变态, 精神缭乱)</p><p>psychopathic(~的), psychopath(~者)</p><p>psyche + <strong>soma</strong>(body) -&gt; psychosomatic(心理压力造成的)</p><p>psyche + analysis -&gt; psychoanalysis(精神分析)</p><p>psychoanalytic(~的), psychoanalyst(~者)</p><p>psyche + <strong>genesis</strong>(birth, origin) -&gt; psychogenic(心因性)</p><p>psyche + therapy -&gt; psychotherapy(精神疗法)</p><p>psychotherapeutic(~的), psychotherapist(~者)</p><h2 id="Session-9"><a href="#Session-9" class="headerlink" title="Session 9"></a>Session 9</h2><h3 id="1-the-whole-tooth"><a href="#1-the-whole-tooth" class="headerlink" title="1. the whole tooth"></a>1. the whole tooth</h3><p>orthos(correct) + <strong>odontos</strong>(tooth) -&gt; orthodontist(正牙医生)</p><p>paidos + odontos -&gt; pedodontist(儿科牙医)</p><p><strong>peri-</strong>(around, surringding) + odontos -&gt; periodontist(牙床专家)</p><p><strong>endo-</strong>(inner, within) + odontos -&gt; endodontist(牙髓学专家)</p><p><strong>ex-</strong>(out) + odontos -&gt; exodontist(拔牙专家)</p><ul><li>-ist(~家), -ia(~科学), -ic(~的)</li></ul><h3 id="2-measurement"><a href="#2-measurement" class="headerlink" title="2. measurement"></a>2. measurement</h3><p>opsis,optikos(view, vision) + <strong>metron</strong>(measurement) -&gt; optometrist(验光技师)</p><p><strong>therme</strong>(heat) + metron -&gt; thermometer(温度计)</p><p><strong>baros</strong>(weight) + metron -&gt; barometer(气压计)</p><p><strong>sphygmos</strong>(pulse) + metron -&gt; sphygmomanometer(血压计)</p><p>metric system(公制, 十进制)</p><h3 id="3-bones-feet-and-hands"><a href="#3-bones-feet-and-hands" class="headerlink" title="3. bones, feet, and hands"></a>3. bones, feet, and hands</h3><p><strong>osteon</strong>(bone) + <strong>pathos</strong>(suffering, disease) -&gt; osteopath(整骨疗法家)</p><p>osteopathy(整骨疗法), osteopathic(整骨疗法的)</p><p><strong>pous, podos</strong>(foot) + iatreia(medical healing) -&gt; podiatrist(足病医生)</p><p>podiatry(足病治疗), podiatric(~的)</p><p><strong>okto</strong>(eight) + pous, podos -&gt; octopus(章鱼, 八爪鱼)</p><p><strong>platys</strong>(broads, float) + pous, podos -&gt; platypus(鸭嘴兽)</p><p>pous, podos + <strong>-ium</strong>(place where) -&gt; podium(讲台)</p><p>gymnasium(健身房), stadium(体育场), auditorium(礼堂)</p><p><strong>tri-</strong>(three) + pous, podos -&gt; tripod(三脚架)</p><p><strong>cheir (chiro-)</strong> + pous, podos -&gt; chiropodist(足病症疗师)</p><p>chiropody(足疗)</p><p>cheir(chiro-) + practical(do) -&gt; chiropractor(按摩师)</p><p>cheir(chiro-) + <strong>graphein</strong>(to write) -&gt; chirography(书法)</p><p>chirographer(~家), chirographic(~的)</p><p>cheir(chiro-) + <strong>-mancy</strong>(fore- telling, prediction) -&gt; chiromancy(手相术) </p><p>chiromancer(手相家), chiromantic(~的)</p><h2 id="Session-10"><a href="#Session-10" class="headerlink" title="Session 10"></a>Session 10</h2><h3 id="1-writing-and-writers"><a href="#1-writing-and-writers" class="headerlink" title="1. writing and writers"></a>1. writing and writers</h3><p>graphein(to write) </p><p><strong>graphein</strong>(to write) + logos(science) -&gt; graphologist(笔相家) </p><p>graphology(笔迹学), graphological(~的)</p><p><strong>kallos</strong>(beauty) + graphein(to write) -&gt; calligrapher(书法家)</p><p>calligraphy(书法), calligraphic(~的)</p><p><strong>kakos</strong>(bad, harsh) + graphein(to write) -&gt; cacography(拙劣的书法)</p><p>cacographer(~的人), cacographic(~的)</p><p><strong>kardia</strong>(heart) + graphein(to write) -&gt; cardiograph(心电图仪)</p><p><strong>photos</strong>(light) + graphein(to write) -&gt; photograph(照片)</p><p><strong>phone(</strong>sound) + graphein(to write) -&gt; phonograph(留声机)</p><p><strong>tele-</strong>(distance) + graphein(to write) -&gt; telegraph(电报)</p><p><strong>bios</strong>(life) + graphein(to write) -&gt; biography(传记)</p><h3 id="2-aging-and-the-old"><a href="#2-aging-and-the-old" class="headerlink" title="2. aging and the old"></a>2. aging and the old</h3><p><strong>geras</strong>(old age) + iatreia(medical healing) -&gt; geriatrician(老年病学专家)</p><p><strong>geron</strong>(old man) + logos(science) -&gt; gerontologist(老年学专家)</p><p>gerontology(老年学), gerontological(老年学的)</p><p><strong>senes</strong>(old) </p><ul><li><p>-&gt; senile(老迈的) -&gt; senility(n, 衰老)</p></li><li><p>-&gt; senior(年长的) -&gt; seniority((n, 年长)</p></li><li><p>-&gt; senate(参议院)</p></li></ul><p>senes(old) + <strong>-escent</strong>(grow up) -&gt; senescent(衰老的) </p><ul><li>adolescent(青少年的) convalescent(康复的) obsolescent(淘汰的)</li></ul><h2 id="Prefix-Root-Suffix"><a href="#Prefix-Root-Suffix" class="headerlink" title="Prefix, Root, Suffix"></a>Prefix, Root, Suffix</h2><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>1</strong></td><td>baros</td><td>weight</td><td><strong>20</strong></td><td>osteon</td><td>bone</td></tr><tr><td><strong>2</strong></td><td>bios</td><td>life</td><td><strong>21</strong></td><td>paidos (ped-)</td><td>child</td></tr><tr><td><strong>3</strong></td><td>cheir (chiro-)</td><td>hand</td><td><strong>22</strong></td><td>pathos</td><td>suffering, disease</td></tr><tr><td><strong>4</strong></td><td>endo-</td><td>inner, within</td><td><strong>23</strong></td><td>peri-</td><td>around, surrounding</td></tr><tr><td><strong>5</strong></td><td>ex-</td><td>out</td><td><strong>24</strong></td><td>photos</td><td>light</td></tr><tr><td><strong>6</strong></td><td>genesis</td><td>birth, origin</td><td><strong>25</strong></td><td>platys</td><td>broad, flat</td></tr><tr><td><strong>7</strong></td><td>geras</td><td>old age</td><td><strong>26</strong></td><td>pous, podos</td><td>foot</td></tr><tr><td><strong>8</strong></td><td>geron</td><td>old man</td><td><strong>27</strong></td><td>psyche</td><td>spirit, soul, mind</td></tr><tr><td><strong>9</strong></td><td>graphein</td><td>to write</td><td><strong>28</strong></td><td>pyge</td><td>buttocks</td></tr><tr><td><strong>10</strong></td><td>iatreia</td><td>medical healing</td><td><strong>29</strong></td><td>senex</td><td>old</td></tr><tr><td><strong>11</strong></td><td>kakos</td><td>bad, harsh</td><td><strong>30</strong></td><td>soma</td><td>body</td></tr><tr><td><strong>12</strong></td><td>kallos</td><td>beauty</td><td><strong>31</strong></td><td>sphygmos</td><td>pulse</td></tr><tr><td><strong>13</strong></td><td>kardia</td><td>heart</td><td><strong>32</strong></td><td>tele-</td><td>distance</td></tr><tr><td><strong>14</strong></td><td>mancy</td><td>prediction</td><td><strong>33</strong></td><td>therme</td><td>heat</td></tr><tr><td><strong>15</strong></td><td>metron</td><td>measurement</td><td><strong>34</strong></td><td>tri-</td><td>three</td></tr><tr><td><strong>16</strong></td><td>odontos</td><td>tooth</td><td><strong>35</strong></td><td>-er</td><td>one who</td></tr><tr><td><strong>17</strong></td><td>okto</td><td>eight</td><td><strong>36</strong></td><td>-escent</td><td>growing, becoming</td></tr><tr><td><strong>18</strong></td><td>opsis, optikos</td><td>vision</td><td><strong>37</strong></td><td>-ic</td><td>adjective suffix</td></tr><tr><td><strong>19</strong></td><td>orthos</td><td>straight, correct</td><td><strong>38</strong></td><td>-ium</td><td>place where</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> English Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Word Power Made Easy(part 2)</title>
      <link href="/2018/09/12/Word-Power-Made-Easy-part-2/"/>
      <url>/2018/09/12/Word-Power-Made-Easy-part-2/</url>
      <content type="html"><![CDATA[<h2 id="Session-4"><a href="#Session-4" class="headerlink" title="Session 4"></a>Session 4</h2><h3 id="选择十类医生职位"><a href="#选择十类医生职位" class="headerlink" title="选择十类医生职位"></a>选择十类医生职位</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">英文</th><th style="text-align:center">中文</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">internist</td><td style="text-align:center">内科医生</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">gynecologist</td><td style="text-align:center">妇科医生</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">obstetrician</td><td style="text-align:center">妇产科医生</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">pediatrician</td><td style="text-align:center">儿科医生</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">dermatologist</td><td style="text-align:center">皮肤科医生</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">ophthalmologist</td><td style="text-align:center">眼科医生</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">orthopedist</td><td style="text-align:center">骨科医生</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">cardiologist</td><td style="text-align:center">心脏病专家</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">neurologist</td><td style="text-align:center">神经科医生</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">psychiatrist</td><td style="text-align:center">精神病医生</td></tr></tbody></table><h2 id="Session-5"><a href="#Session-5" class="headerlink" title="Session 5"></a>Session 5</h2><h3 id="1-inside-you"><a href="#1-inside-you" class="headerlink" title="1.inside you"></a>1.inside you</h3><p><strong>internus</strong>(inside) + -ist -&gt; internist(内科医生)</p><p>intern/interne(实习医师)</p><h3 id="2-doctors-for-women"><a href="#2-doctors-for-women" class="headerlink" title="2.doctors for women"></a>2.doctors for women</h3><p>gyne(women) + <strong>logos</strong>(science) -&gt; gynecology(妇科学) + -al -&gt; gynecological(~的)</p><p><strong>obstetrix</strong>(midwife/to stand, 接生婆) + -ician(expert) -&gt; obstetrician(妇产科医生)</p><p>obstetrics(产科学) , obstetric/obstetrical(产科的)</p><h3 id="3-children"><a href="#3-children" class="headerlink" title="3.children"></a>3.children</h3><p><strong>paidos</strong>(child) + <strong>iatreia</strong>(medical healing) + -ician -&gt; pediatrican(儿科医生)</p><p>pediatrics(儿科学) , pediatric(儿科学的)</p><ul><li><strong>pedis</strong>(foot) -&gt; pedestal, pedal, pedestrian（ped- 与paidos不同）</li></ul><p>paidos(child) + <strong>agogos</strong>(leading) -&gt; pedagogy(教育学) + -al -&gt; pedagogical(教育学的)</p><p>pedagogy -&gt; pedagogue(教育者, <strong>贬义</strong>)</p><p>demos(people) + agogos(leading) -&gt; demagogue(企图领导别人的人)</p><p>demagoguery(煽动行为), demagogic(~的)</p><h3 id="4-skin-deep"><a href="#4-skin-deep" class="headerlink" title="4.skin-deep"></a>4.skin-deep</h3><p><strong>derma</strong>(skin) + logos(science) -&gt; dermatology(皮肤学)</p><p>dermatologist(~家), dermatogical(~的)</p><p><strong>hypos</strong>(under) + demas(skin) -&gt; hypodermic(皮下的)</p><p><strong>epi</strong>(upon) + demas(skin) -&gt; epidermis(outermost layer of <strong>skin</strong>)</p><p><strong>taxis</strong>(arrangement) + demas(skin) -&gt; taxidermy</p><p><strong>pakhus</strong>(thick, 厚的) + demas(skin) -&gt; pachyderm(厚皮动物)</p><p>demas(skin) + <strong>-itis</strong> -&gt; dermatitis(皮炎) </p><h3 id="5-the-eyes-have-it"><a href="#5-the-eyes-have-it" class="headerlink" title="5.the eyes have it"></a>5.the eyes have it</h3><p><strong>ophthalmos</strong>(eye) + logos(science) -&gt; ophthalmology(眼科学)</p><p>ophthalmologist(眼科医生)</p><p><strong>oculus</strong>(eye) + -ist -&gt; oculist(眼科医生)</p><p>ocular(眼睛的)</p><p><strong>monos</strong>(one) + oculus -&gt; monocle(单片眼镜)</p><p><strong>bi-</strong>(two) + oculus -&gt; binoculars(双筒望远镜)</p><p><strong>in-</strong>(into) + oculus -&gt; inoculate(给…接种)</p><p><strong>opsis/optikos</strong>(sight or vision) + <strong>metron</strong>(measurement) -&gt;optometrist(验光师)</p><p>opsis/optikos(sight or vision) + -ician -&gt; optician(配镜师)</p><p>optics(光学)</p><p>optometric, optometrical, optical(视觉的)</p><h2 id="Session-6"><a href="#Session-6" class="headerlink" title="Session 6"></a>Session 6</h2><h3 id="1-the-straighteners"><a href="#1-the-straighteners" class="headerlink" title="1.the straighteners"></a>1.the straighteners</h3><p><strong>orthos</strong>(straight, correct) + paidos(child) -&gt; orthopedist(骨科医师)</p><p>orthopedics(矫形术)</p><p>orthos(straight, correct) + <strong>odontos</strong>(tooth) -&gt; orthodontia(牙科矫正术) </p><p>orthodontist(正齿牙医)</p><p>orthodontic(正牙术的)</p><h3 id="2-the-heart"><a href="#2-the-heart" class="headerlink" title="2.the heart"></a>2.the heart</h3><p><strong>kardia</strong>(heart) + logos(science) -&gt; cardiologist(心脏病专家)</p><p>cardiology(心脏病学), cardiological(心脏病学的)</p><p>cardiac(心脏的), cardiogram(心电图), cardiograph(心电图仪)</p><h3 id="3-the-nervous-system"><a href="#3-the-nervous-system" class="headerlink" title="3.the nervous system"></a>3.the nervous system</h3><p><strong>neuron</strong>(nerve) + logos(science) -&gt; neurologist(神经科医生)</p><p>neurology(神经学), neurological(~的)</p><p>neuron(nerve) + <strong>algos</strong>(pain) -&gt; neuralgia(神经痛)</p><p>neuron(nerve) + -itis -&gt; neuritis(神经炎)</p><p>neuron(nerve) + <strong>-osis</strong>(abnormal, diseased condition) -&gt; neurosis(神经症, 过分恐惧)</p><p>neurotic(~的/~的人)</p><h3 id="4-the-mind"><a href="#4-the-mind" class="headerlink" title="4.the mind"></a>4.the mind</h3><p><strong>psyche</strong>(spirit, soul ,mind) + -osis -&gt; psychosis(精神错乱)</p><p>psychotic(~的/~的人)</p><p>psyche(spirit, soul ,mind) + iatreia(medical healing) -&gt; psychiatrist(精神病医生)</p><p>ped-(foot) + iatreia(medical healing) -&gt; podiatry(足疗)</p><p><strong>geras</strong>(old age) + -iatreia(medical healing) -&gt; geriatrics(老年病学)</p><p>geriatric(~的), geriatrician(~的人)</p><h2 id="Prefix-Root-Suffix"><a href="#Prefix-Root-Suffix" class="headerlink" title="Prefix, Root, Suffix"></a>Prefix, Root, Suffix</h2><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>1</strong></td><td>agogos</td><td>leading, leader</td><td><strong>14</strong></td><td>neuron</td><td>nerve</td></tr><tr><td><strong>2</strong></td><td>algos</td><td>pain</td><td><strong>15</strong></td><td>obstetrix</td><td>midwife</td></tr><tr><td><strong>3</strong></td><td>bi-</td><td>two</td><td><strong>16</strong></td><td>oculus</td><td>eye</td></tr><tr><td><strong>4</strong></td><td>demos</td><td>people</td><td><strong>17</strong></td><td>odontos</td><td>tooth</td></tr><tr><td><strong>5</strong></td><td>derma</td><td>skin</td><td><strong>18</strong></td><td>ophthalmos</td><td>eye</td></tr><tr><td><strong>6</strong></td><td>geras</td><td>old age</td><td><strong>19</strong></td><td>opsis, optikos</td><td>vision, sight</td></tr><tr><td><strong>7</strong></td><td>gyne</td><td>woman</td><td><strong>20</strong></td><td>orthos</td><td>straight, correct</td></tr><tr><td><strong>8</strong></td><td>hypos</td><td>under</td><td><strong>21</strong></td><td>paidos</td><td>child</td></tr><tr><td><strong>9</strong></td><td>iatreia</td><td>medical healing</td><td><strong>22</strong></td><td>pedis</td><td>foot</td></tr><tr><td><strong>10</strong></td><td>internus</td><td>inside</td><td><strong>23</strong></td><td>psyche</td><td>spirit, soul, mind</td></tr><tr><td><strong>11</strong></td><td>logos</td><td>science; study</td><td><strong>24</strong></td><td>-ician</td><td>expert</td></tr><tr><td><strong>12</strong></td><td>metron</td><td>measurement</td><td><strong>25</strong></td><td>-itis</td><td>inflammation</td></tr><tr><td><strong>13</strong></td><td>monos</td><td>one</td><td><strong>26</strong></td><td>-osis</td><td>abnormal, diseased condition</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> English Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Word Power Made Easy(part 1)</title>
      <link href="/2018/09/10/Word-Power-Made-Easy-part-1/"/>
      <url>/2018/09/10/Word-Power-Made-Easy-part-1/</url>
      <content type="html"><![CDATA[<h2 id="Session-1"><a href="#Session-1" class="headerlink" title="Session 1"></a>Session 1</h2><h3 id="选择十种个性类型"><a href="#选择十种个性类型" class="headerlink" title="选择十种个性类型"></a>选择十种个性类型</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">英文</th><th style="text-align:center">中文</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">egoist</td><td style="text-align:center">利己主义者</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">egotist</td><td style="text-align:center">自大者</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">altruist</td><td style="text-align:center">利他主义者</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">introvert</td><td style="text-align:center">内向的人</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">extrovert</td><td style="text-align:center">外向的人</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">ambivert</td><td style="text-align:center">中向性格者</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">misanthrope</td><td style="text-align:center">厌世者</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">misogynist</td><td style="text-align:center">讨厌女人的人</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">misogamist</td><td style="text-align:center">讨厌结婚的人</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center">ascetic</td><td style="text-align:center">禁欲主义者</td></tr></tbody></table><h2 id="Session-2"><a href="#Session-2" class="headerlink" title="Session 2"></a>Session 2</h2><h3 id="1-词根-ego-我"><a href="#1-词根-ego-我" class="headerlink" title="1.词根 ego (我)"></a>1.词根 <em>ego</em> (我)</h3><p><strong>ego</strong> + ist(…的人) -&gt; egoist(利己主义者) + t(talk) -&gt;egotist(自大者)</p><p>ego + <strong>centri</strong>(中心) -&gt; egocentric(以自我为中心的人)</p><p>ego + <strong>mania</strong>(狂热) -&gt; egomaniac(极端利己者) + al -&gt; egomaniacal(极端利己的)</p><h3 id="2-词根-Others-他者"><a href="#2-词根-Others-他者" class="headerlink" title="2.词根 Others (他者)"></a>2.词根 <em>Others</em> (他者)</h3><p><em>other</em> = <em>alter</em></p><p><strong>alter</strong> + ism/ist = altruism/altruist(利他主义/者) -&gt; altruistic(利他的) </p><p>alter(other) -&gt; alternate(<strong><em>other</em></strong> thing,替换/取代) -&gt; alternative(替代物)</p><p>alter(other) -&gt; alteration(make things <strong><em>other</em></strong>, 变换/变更)</p><p>alter(other) -&gt; altercation(have <strong><em>other</em></strong> idea, 争吵)</p><p>alter + ego -&gt; alter ego(密友/个性的另一面)</p><h2 id="Session-3"><a href="#Session-3" class="headerlink" title="Session 3"></a>Session 3</h2><p><strong>intro</strong>(inward) + <strong>verto</strong>(to turn) -&gt; introvert(内向的人)</p><p><strong>extro</strong>(outward) + verto(to turn) -&gt; extrovert(外向的人)</p><p><strong>ambi</strong>(both) + verto(to turn) -&gt; ambivert(中向性格者)</p><h3 id="1-right-hand"><a href="#1-right-hand" class="headerlink" title="1.right hand"></a>1.right hand</h3><p><strong>droit</strong>(right hand) -&gt; adroit(skillful) -&gt;adroitness(技巧，n.)</p><p><strong>dexter</strong>(right hand) + -ous/-ity =  dexterous(skillful, adj.)/dexterity(技巧/灵巧，n.)</p><p>ambi + dexterous/dexterity -&gt; ambidextrous(双手善用的)/ambidexterity</p><h3 id="2-left-hand"><a href="#2-left-hand" class="headerlink" title="2.left hand"></a>2.left hand</h3><p><strong>sinister</strong>(left hand, 邪恶的)</p><p><strong>gauche</strong>(left hand, 笨拙的)</p><p>gaucherie(clumsy, 笨拙的/无理的)</p><h3 id="3-love-hate-marriage"><a href="#3-love-hate-marriage" class="headerlink" title="3.love, hate, marriage"></a>3.love, hate, marriage</h3><p><strong>mission</strong>(憎恨) + <strong>anthropos</strong>(人类) -&gt; misanthrope(厌世者)</p><p><strong>phil</strong>(爱) + anthropos(人类)  + -<strong>ist</strong> -&gt; philanthropist(慈善家)</p><p>mission(憎恨) + <strong>gyne</strong>(女人) + -ist -&gt; misogynist(讨厌女人的人)</p><p>mission(憎恨) + <strong>gamos</strong>(婚姻) + -ist -&gt; misogamist(讨厌结婚的人)</p><p>gynecologist(妇科学家)</p><p><strong>monos</strong>(one)  + gamos(婚姻) -&gt; monogamy(一夫一妻制)</p><p><strong>bi-</strong>(two) + gamos(婚姻) -&gt; bigamy(重婚罪)</p><p><strong>polys</strong>(many) + gamos(婚姻) -&gt; polygamy(一夫多妻制)</p><p>polys(many) + gyne(女人)-&gt; polygyne(一夫多妻制)</p><p>polys(many) + <strong>andros</strong>(男性) -&gt; polyandry(一妻多夫制)</p><h3 id="4-suffix"><a href="#4-suffix" class="headerlink" title="4.suffix"></a>4.suffix</h3><p>-ist(指人)</p><p>-y(行为/态度)</p><p>-ic/-ous/-al(形容词)</p><h3 id="5-asketes"><a href="#5-asketes" class="headerlink" title="5.asketes"></a>5.asketes</h3><p><strong>asketes</strong>(和尚，隐士) -&gt; ascetic(苦行者)</p><p>asketes + <strong>-ism</strong> -&gt; asceticism(苦行主义)</p><h2 id="Prefix-Root-Suffix"><a href="#Prefix-Root-Suffix" class="headerlink" title="Prefix, Root, Suffix"></a>Prefix, Root, Suffix</h2><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>1</strong></td><td>alter</td><td>other</td><td><strong>13</strong></td><td>gyne</td><td>woman</td></tr><tr><td><strong>2</strong></td><td>ambi-</td><td>both</td><td><strong>14</strong></td><td>intro-</td><td>inside</td></tr><tr><td><strong>3</strong></td><td>andros</td><td>male</td><td><strong>15</strong></td><td>mania</td><td>madness</td></tr><tr><td><strong>4</strong></td><td>anthropos</td><td>mankind</td><td><strong>16</strong></td><td>misein</td><td>hate</td></tr><tr><td><strong>5</strong></td><td>asketes</td><td>monk</td><td><strong>17</strong></td><td>monos</td><td>one</td></tr><tr><td><strong>6</strong></td><td>centrum</td><td>center</td><td><strong>18</strong></td><td>polys</td><td>many</td></tr><tr><td><strong>7</strong></td><td>dexter</td><td>right hand</td><td><strong>19</strong></td><td>sinister</td><td>left hand</td></tr><tr><td><strong>8</strong></td><td>droit</td><td>right hand</td><td><strong>20</strong></td><td>verto</td><td>turn</td></tr><tr><td><strong>9</strong></td><td>ego</td><td>self, I</td><td><strong>21</strong></td><td>-ist</td><td>who (noun)</td></tr><tr><td><strong>10</strong></td><td>extro-</td><td>outside</td><td><strong>22</strong></td><td>-ity</td><td>quality, condition, etc. (noun)</td></tr><tr><td><strong>11</strong></td><td>gamos</td><td>marriage</td><td><strong>23</strong></td><td>-ous</td><td>adjective</td></tr><tr><td><strong>12</strong></td><td>gauche</td><td>left hand</td><td><strong>24</strong></td><td>-y</td><td>practice, custom, etc. (noun)</td></tr></tbody></table>]]></content>
      
      
        <tags>
            
            <tag> English Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Blockchain-based Machine Learning Marketplaces</title>
      <link href="/2018/08/20/Blockchain-based-Machine-Learning-Marketplaces/"/>
      <url>/2018/08/20/Blockchain-based-Machine-Learning-Marketplaces/</url>
      <content type="html"><![CDATA[<h1 id="基于区块链的机器学习市场"><a href="#基于区块链的机器学习市场" class="headerlink" title="基于区块链的机器学习市场"></a>基于区块链的机器学习市场</h1><p><a href="https://medium.com/@FEhrsam/blockchain-based-machine-learning-marketplaces-cb2d4dae2c17" target="_blank" rel="noopener">来源</a></p><p>基于区块链的市场数据培训的机器学习模型有可能创造世界上最强大的人工智能。它们结合了两个强有力的原语：私人机器学习，允许在不泄露敏感私人数据的情况下进行培训，以及基于区块链的激励，允许这些系统吸引最佳数据和模型，使其更加智能。这将会促进以后的开放的市场，任何人都可以出售他们的数据并保持他们的数据私密，而开发人员可以使用激励来吸引他们的算法的最佳数据。<br>构建这些系统具有挑战性，并且仍在创建必需的构建块，但简单的初始版本看起来已经开始成为可能。我相信这些市场将把我们从当前的Web 2.0数据垄断时代转变为数据和算法公开竞争的Web 3.0时代，两者都直接货币化</p><h2 id="想法起源"><a href="#想法起源" class="headerlink" title="想法起源"></a>想法起源</h2><p>这个想法的基础来自于与 <a href="https://numer.ai/" target="_blank" rel="noopener">Numerai</a>的理查德交谈。 Numerai是一家对冲基金，向任何想要竞争模拟股市的数据科学家发送加密的市场数据。 Numerai将最佳模型提交结合到“<a href="https://en.wikipedia.org/wiki/Metamodeling" target="_blank" rel="noopener">元模型</a>”中，交换元模型，并向模型表现良好的数据科学家付费。<br>让数据科学家竞争似乎是一个强大的想法。所以它让我思考：你能创建一个完全去中心化的系统版本，可以推广到任何问题吗？我相信答案是肯定的。</p><h2 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h2><p>举个例子，让我们尝试创建一个完全去中心化的系统，用于在分散的交易所交易加密货币。这是许多潜在的结构之一：</p><p><strong>数据</strong>数据提供商对数据进行支持并使其可供建模者使用。 </p><p><strong>模型构建</strong>Modeler选择要使用的数据并创建模型。使用安全计算方法完成培训，该方法允许在不揭示基础数据的情况下训练模型。模型也在供应商的固定下。<br><img src="https://cdn-images-1.medium.com/max/1200/1*Gijb5M3zuLRbXaDmVAS0JA.jpeg" alt="img"></p><p><strong>元模型构建</strong>元模型是基于算法创建的，该算法考虑了每个模型的放样。 创建元模型是可选的——您可以想象使用的模型被使用而没有组合成元模型。 </p><p><strong>使用元模型</strong>一个智能的合约接受了元模型并按照程序通过去中心化的交换机制在链上进行交易。 </p><p><strong>分配收益/损失</strong>经过一段时间后，交易产生盈利或亏损。这种利润或损失在元模型的贡献者之间进行划分，这取决于他们创造了多少。负面贡献的模型有部分或全部赌注资金。然后，模型转向并对其数据提供者执行类似的分配/利益削减。</p><p><strong>可验证的计算</strong>每个步骤的计算要么使用像<a href="http://truebit.io/" target="_blank" rel="noopener">Truebit</a>这样的验证游戏进行集中但可验证且具有挑战性，要么使用安全的多方计算进行分散。</p><p><strong>托管</strong>数据和模型要么托管在<a href="http://ipfs.io/" target="_blank" rel="noopener">IPFS</a>，要么托管在安全的多方计算网络中，因为链上存储太昂贵了。</p><h2 id="是什么让这个系统强大？"><a href="#是什么让这个系统强大？" class="headerlink" title="是什么让这个系统强大？"></a>是什么让这个系统强大？</h2><p><strong>全球吸引最佳数据的激励措施</strong> 吸引数据的激励措施是系统中最有效的部分，因为数据往往是大多数机器学习的<a href="https://www.wired.com/2015/11/google-open-sourcing-tensorflow-shows-ais-future-is-data-not-code/" target="_blank" rel="noopener">限制因素</a>。同样，比特币通过开放式激励创建了世界上计算能力最强的新兴系统，正确设计的数据激励结构将为您的应用程序带来世界上最好的数据。并且几乎不可能关闭数据来自数千或数百万来源的系统。 </p><p><strong>算法之间的竞争</strong>在以前不存在的地方创建模型/算法之间的公开竞争。想象一下分散的Facebook，有数千种竞争新闻源算法。 </p><p><strong>奖励的透明度</strong>数据和模型提供商可以看到他们获得了他们提交的内容的公允价值，因为所有计算都是可验证的，这使他们更有可能参与。 </p><p><strong>自动化</strong>在链上执行动作并直接在令牌中生成价值，创建一个自动化且无信任的闭环。 </p><p><strong>网络效应</strong>来自用户，数据提供商和数据科学家的多边网络效应使系统自我强化。它表现得越好，吸引的资金就越多，这意味着更多的潜在支出，吸引更多的数据提供者和数据科学家，他们使系统变得更加智能，从而吸引更多的资金，并再次回归。</p><h2 id="隐私"><a href="#隐私" class="headerlink" title="隐私"></a>隐私</h2><p>除了以上几点，一个主要特征是隐私。它允许1）人们提交过于私密的数据，以及2）防止数据和模型的经济价值泄露。如果在未打开的情况下保留未加密状态，则数据和模型将被免费复制并由未参与任何工作的其他人使用<a href="https://en.wikipedia.org/wiki/Free-rider_problem" target="_blank" rel="noopener">“免费搭车”问题</a>。 </p><p>对搭便车问题的部分解决方案是私下出售数据。即使买家选择转售或发布数据，其价值也会随着时间的推移而衰减。但是，这种方法将我们限制在短期使用情况下，仍然会产生典型的隐私问题。因此，更复杂但更强大的方法是使用一种安全计算形式。</p><h2 id="安全的计算"><a href="#安全的计算" class="headerlink" title="安全的计算"></a>安全的计算</h2><p>安全计算方法允许模型在不显示数据本身的情况下训练数据。今天使用和研究了3种主要形式的安全计算：<a href="https://en.wikipedia.org/wiki/Homomorphic_encryption" target="_blank" rel="noopener">同态加密</a> （HE），<a href="https://mortendahl.github.io/2017/04/17/private-deep-learning-with-mpc/" target="_blank" rel="noopener">安全</a> <a href="https://en.wikipedia.org/wiki/Secure_multi-party_computation" target="_blank" rel="noopener">多方计算</a> (MPC), 和 <a href="https://blog.cryptographyengineering.com/2014/11/27/zero-knowledge-proofs-illustrated-primer/" target="_blank" rel="noopener">零知识证明</a> (ZKPs). 多方计算<a href="https://mortendahl.github.io/2017/04/17/private-deep-learning-with-mpc/" target="_blank" rel="noopener">目前</a>最常用于私人机器学习，因为同态加密往往太慢，并且如何将ZKPs应用于机器学习并不明显。安全的计算方法正处于计算机科学研究的前沿。它们通常比常规计算慢几个数量级，并且代表了系统的主要瓶颈，但近年来一直在改进。</p><h2 id="最终的推荐系统"><a href="#最终的推荐系统" class="headerlink" title="最终的推荐系统"></a>最终的推荐系统</h2><p>为了说明私人机器学习的潜力，想象一下名为“终极推荐系统”的应用程序。它会监视您在设备上执行的所有操作：浏览历史记录，应用程序中的所有操作，手机上的图片，位置数据，消费历史记录，可穿戴传感器，短信，家中的摄像头，未来AR眼镜的摄像头。然后它会为您提供建议：您应该访问的下一个网站，要阅读的文章，要收听的歌曲或要购买的产品。 </p><p>这个推荐系统非常有效。 Google，Facebook或其他任何现有的数据孤岛都可能因为它拥有最大的纵向视图而且可以从<strong>数据中学习，否则这些数据将过于私密而无法考虑共享</strong>。与之前的加密货币交易系统示例类似，它可以通过允许专注于不同领域的模型市场（例如：网站推荐，音乐）竞争访问您的加密数据并向您推荐内容，甚至可能付费给您用于提供数据或关注所产生的建议。 </p><p>谷歌的 <a href="https://research.googleblog.com/2017/04/federated-learning-collaborative.html" target="_blank" rel="noopener">联合学习</a> 和Apple的<a href="https://www.wired.com/2016/06/apples-differential-privacy-collecting-data/" target="_blank" rel="noopener">差异隐私</a> 是这个私人机器学习方向的一步，但仍然<a href="https://eprint.iacr.org/2017/281.pdf" target="_blank" rel="noopener">需要信任</a>,，不允许用户<a href="https://www.wired.com/story/apple-differential-privacy-shortcomings/" target="_blank" rel="noopener">直接检查</a> 他们的安全性，并保持数据孤立。</p><h2 id="目前的方法"><a href="#目前的方法" class="headerlink" title="目前的方法"></a>目前的方法</h2><p>现在还很早。很少有团体有任何工作，大多数人都试图一次咬掉一件。</p><p> <a href="https://algorithmia.com/research/ml-models-on-blockchain" target="_blank" rel="noopener">Algorithmia Research</a> 的一个简单结构是在一个精确高于某个回测阈值的模型上放置一个奖励：</p><p><img src="https://cdn-images-1.medium.com/max/1600/1*qzr0K7_EtraMhfUa2ywdSA.png" alt="img"></p><p>简单的构造在Algorithmia Research的机器学习模型上创造了一笔赏金 </p><p>Numerai目前更进一步：它使用加密数据（虽然不是完全同态），它将众包模型组合成元模型，并根据未来表现（在这种情况下，一周股票交易）奖励模型，而不是通过回溯测试一个名为<a href="https://numer.ai/whitepaper.pdf" target="_blank" rel="noopener">Numeraire</a>的原生以太坊标记。数据科学家必须将Numeraire作为游戏中的皮肤，激励对将要发生的事情（未来表现）的表现，而不是发生的事情（经过反复测试的表现）。但是，它目前集中分发数据，限制了最重要的成分。</p><p>还没有人为数据创建一个成功的基于区块链的市场。 <a href="https://oceanprotocol.com/" target="_blank" rel="noopener">The Ocean</a> 是早期尝试概述一个。</p><p>还有一些人开始建立安全的计算网络。  <a href="http://openmined.org/" target="_blank" rel="noopener">Openmined</a>正在创建一个多方计算网络，用于在 <a href="https://unity3d.com/machine-learning" target="_blank" rel="noopener">Unity</a> 之上训练机器学习模型，可以在任何设备上运行，包括游戏控制台（类似于<a href="http://folding.stanford.edu/" target="_blank" rel="noopener">家庭折叠</a>），然后扩展到安全MPC。<a href="http://enigma.co/" target="_blank" rel="noopener">Enigma</a> 也有类似的机智。 </p><p>一个迷人的最终状态将是<strong>相互拥有的元模型，它使数据提供者和模型创建者的所有权与他们制作它们的智能程度成正比</strong>。模型将被标记化，可以随着时间的推移支付股息，甚至可能由训练它们的人管理。一种互相拥有的蜂巢头脑。 <a href="https://www.youtube.com/watch?v=sXFmKquiVnk" target="_blank" rel="noopener">最初的Openmined视频</a> 是我迄今为止看到的最接近的结构。</p><h2 id="哪些方法可能先起作用？"><a href="#哪些方法可能先起作用？" class="headerlink" title="哪些方法可能先起作用？"></a>哪些方法可能先起作用？</h2><p>我不会声称知道什么是最精确的结构，但我有一些想法。</p><p>我用来评估区块链思想的一篇论文是：在本身原生到数字原生到区块链原生的范围内，越多的区块链原生，越好。区块链本地越少，引入的第三方就越可信，增加了复杂性并降低了与其他系统一起构建块的易用性。 </p><p>在这里，我认为这意味着如果创造的价值是可量化的，系统更有可能发挥作用 ，理想情况下，直接以货币形式，更好的是，代币。这允许一个干净的闭环系统。将加密货币交易系统的先前示例与识别X射线中的肿瘤的示例进行比较。在后者中，您需要说服一家保险公司X射线模型是有价值的，谈判有多大价值，然后相信一小群实际存在的人来验证模型的成功/失败。 </p><p>这并不是说更明确的社会用途的积极总和将不会出现数字原生。像前面提到的那样的推荐系统可能非常有用。如果附加到 <a href="https://twitter.com/FEhrsam/status/958388803655184386" target="_blank" rel="noopener">策展市场</a>，它们是另一种情况，模型可以在程序上在链上采取行动，系统的奖励是令牌（在这种情况下来自策展市场），再次创建一个干净的闭环。现在似乎模糊不清，但我希望区块链本地任务的领域随着时间的推移而扩展。</p><h2 id="启示"><a href="#启示" class="headerlink" title="启示"></a>启示</h2><p>首先，去中心化的机器学习市场可以拆除当前科技巨头的数据垄断。在过去的20年里，它们标准化并商品化了互联网上价值创造的主要来源：专有数据网络和围绕它们的强大网络效应。结果，<strong>价值创建从数据向上移动到算法</strong>。</p><p><img src="https://cdn-images-1.medium.com/max/1600/1*VVCasQUJ-YFSIpUOwROx-g.png" alt="img"></p><p>技术的标准化和商品化周期，我们即将接近数据垄断网络时代的终结。图片来自Placeholder。 </p><p>换句话说，他们为<strong>AI创建了一个</strong> <a href="https://twitter.com/FEhrsam/status/809145982927540224" target="_blank" rel="noopener"><strong>直接的商业模式</strong></a> 。提供数据和训练它。 </p><p>其次，他们创造了世界上最强大的人工智能系统，通过直接的经济激励吸引了最好的数据和模型。他们的力量通过多边网络效应而增加。随着Web 2.0时代数据网络垄断商品化，它们似乎成为下一个重新聚合点的良好候选者。我们可能还需要几年时间，但看起来方向正确。</p><p>第三，如推荐系统示例所示，<strong>搜索被反转</strong>。产品不是搜索产品，而是搜索和竞争人员（对于这种框架而言归功于 <a href="https://twitter.com/BradUSV" target="_blank" rel="noopener">Brad</a> ）。每个人都可能拥有个人策展市场，推荐系统竞争将最相关的内容放入其提要中，并且相关性由个人定义。 </p><p>第四，它们使我们能够从谷歌和Facebook等公司获得的强大的基于机器学习的服务中获得相同的好处，而不会泄露我们的数据。 </p><p>第五，机器学习可以更快地发展，因为任何工程师都可以访问开放的数据市场，而不仅仅是大型Web 2.0公司中的一小组工程师。</p><h2 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h2><p>首先，安全计算方法目前非常慢，并且机器学习已经在计算上非常昂贵。另一方面，人们对安全计算方法的兴趣已经开始挑选并且性能正在提高。我见过过去6个月内HE，MPC和ZKPs性能显着提高的新方法。</p><p>对一组特定数据或模型提供给元模型的值进行计算是很困难的。 </p><p>清理和格式化众包数据具有挑战性。我们可能会看到一些工具，标准化和小型企业的组合来解决这个问题。 </p><p>最后，具有讽刺意味的是，用于创建此类系统的通用构造的业务模型不如创建单个实例那么明确。这似乎适用于许多新的加密原语，包括策展市场。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>私人机器学习与区块链激励相结合，可以在各种应用中创造最强大的机器智能。随着时间的推移，存在可以解决的重大技术挑战。他们的长期潜力是巨大的，并且从大型互联网公司目前对数据的控制中脱颖而出。它们也有点可怕 - 它们引导自己存在，自我强化，消耗私人数据，几乎不可能关闭，让我想知道创建它们是否比以往任何时候都要召唤更强大的 <a href="http://slatestarcodex.com/2014/07/30/meditations-on-moloch/" target="_blank" rel="noopener">Moloch</a> 。无论如何，它们是加密货币将如何慢慢地，然后突然进入每个行业的另一个例子。</p>]]></content>
      
      
        <tags>
            
            <tag> Blockchain </tag>
            
            <tag> Machine Learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>A code demo</title>
      <link href="/2018/08/19/A-code-demo/"/>
      <url>/2018/08/19/A-code-demo/</url>
      <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copyright 2015 Google Inc. All Rights Reserved.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"># you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"># You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"># distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"># See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"># limitations under the License.</span></span><br><span class="line"><span class="comment"># ==============================================================================</span></span><br><span class="line"><span class="string">"""Functions for downloading and reading MNIST data."""</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tensorflow.python.platform</span><br><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">from</span> six.moves <span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> six.moves <span class="keyword">import</span> xrange  <span class="comment"># pylint: disable=redefined-builtin</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">SOURCE_URL = <span class="string">'http://yann.lecun.com/exdb/mnist/'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">maybe_download</span><span class="params">(filename, work_directory)</span>:</span></span><br><span class="line">  <span class="string">"""Download the data from Yann's website, unless it's already here."""</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(work_directory):</span><br><span class="line">    os.mkdir(work_directory)</span><br><span class="line">  filepath = os.path.join(work_directory, filename)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(filepath):</span><br><span class="line">    filepath, _ = urllib.request.urlretrieve(SOURCE_URL + filename, filepath)</span><br><span class="line">    statinfo = os.stat(filepath)</span><br><span class="line">    print(<span class="string">'Successfully downloaded'</span>, filename, statinfo.st_size, <span class="string">'bytes.'</span>)</span><br><span class="line">  <span class="keyword">return</span> filepath</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_read32</span><span class="params">(bytestream)</span>:</span></span><br><span class="line">  dt = numpy.dtype(numpy.uint32).newbyteorder(<span class="string">'&gt;'</span>)</span><br><span class="line">  <span class="keyword">return</span> numpy.frombuffer(bytestream.read(<span class="number">4</span>), dtype=dt)[<span class="number">0</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extract_images</span><span class="params">(filename)</span>:</span></span><br><span class="line">  <span class="string">"""Extract the images into a 4D uint8 numpy array [index, y, x, depth]."""</span></span><br><span class="line">  print(<span class="string">'Extracting'</span>, filename)</span><br><span class="line">  <span class="keyword">with</span> gzip.open(filename) <span class="keyword">as</span> bytestream:</span><br><span class="line">    magic = _read32(bytestream)</span><br><span class="line">    <span class="keyword">if</span> magic != <span class="number">2051</span>:</span><br><span class="line">      <span class="keyword">raise</span> ValueError(</span><br><span class="line">          <span class="string">'Invalid magic number %d in MNIST image file: %s'</span> %</span><br><span class="line">          (magic, filename))</span><br><span class="line">    num_images = _read32(bytestream)</span><br><span class="line">    rows = _read32(bytestream)</span><br><span class="line">    cols = _read32(bytestream)</span><br><span class="line">    buf = bytestream.read(rows * cols * num_images)</span><br><span class="line">    data = numpy.frombuffer(buf, dtype=numpy.uint8)</span><br><span class="line">    data = data.reshape(num_images, rows, cols, <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dense_to_one_hot</span><span class="params">(labels_dense, num_classes=<span class="number">10</span>)</span>:</span></span><br><span class="line">  <span class="string">"""Convert class labels from scalars to one-hot vectors."""</span></span><br><span class="line">  num_labels = labels_dense.shape[<span class="number">0</span>]</span><br><span class="line">  index_offset = numpy.arange(num_labels) * num_classes</span><br><span class="line">  labels_one_hot = numpy.zeros((num_labels, num_classes))</span><br><span class="line">  labels_one_hot.flat[index_offset + labels_dense.ravel()] = <span class="number">1</span></span><br><span class="line">  <span class="keyword">return</span> labels_one_hot</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extract_labels</span><span class="params">(filename, one_hot=False)</span>:</span></span><br><span class="line">  <span class="string">"""Extract the labels into a 1D uint8 numpy array [index]."""</span></span><br><span class="line">  print(<span class="string">'Extracting'</span>, filename)</span><br><span class="line">  <span class="keyword">with</span> gzip.open(filename) <span class="keyword">as</span> bytestream:</span><br><span class="line">    magic = _read32(bytestream)</span><br><span class="line">    <span class="keyword">if</span> magic != <span class="number">2049</span>:</span><br><span class="line">      <span class="keyword">raise</span> ValueError(</span><br><span class="line">          <span class="string">'Invalid magic number %d in MNIST label file: %s'</span> %</span><br><span class="line">          (magic, filename))</span><br><span class="line">    num_items = _read32(bytestream)</span><br><span class="line">    buf = bytestream.read(num_items)</span><br><span class="line">    labels = numpy.frombuffer(buf, dtype=numpy.uint8)</span><br><span class="line">    <span class="keyword">if</span> one_hot:</span><br><span class="line">      <span class="keyword">return</span> dense_to_one_hot(labels)</span><br><span class="line">    <span class="keyword">return</span> labels</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataSet</span><span class="params">(object)</span>:</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, images, labels, fake_data=False, one_hot=False,</span></span></span><br><span class="line"><span class="function"><span class="params">               dtype=tf.float32)</span>:</span></span><br><span class="line">    <span class="string">"""Construct a DataSet.</span></span><br><span class="line"><span class="string">    one_hot arg is used only if fake_data is true.  `dtype` can be either</span></span><br><span class="line"><span class="string">    `uint8` to leave the input as `[0, 255]`, or `float32` to rescale into</span></span><br><span class="line"><span class="string">    `[0, 1]`.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    dtype = tf.as_dtype(dtype).base_dtype</span><br><span class="line">    <span class="keyword">if</span> dtype <span class="keyword">not</span> <span class="keyword">in</span> (tf.uint8, tf.float32):</span><br><span class="line">      <span class="keyword">raise</span> TypeError(<span class="string">'Invalid image dtype %r, expected uint8 or float32'</span> %</span><br><span class="line">                      dtype)</span><br><span class="line">    <span class="keyword">if</span> fake_data:</span><br><span class="line">      self._num_examples = <span class="number">10000</span></span><br><span class="line">      self.one_hot = one_hot</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">      <span class="keyword">assert</span> images.shape[<span class="number">0</span>] == labels.shape[<span class="number">0</span>], (</span><br><span class="line">          <span class="string">'images.shape: %s labels.shape: %s'</span> % (images.shape,</span><br><span class="line">                                                 labels.shape))</span><br><span class="line">      self._num_examples = images.shape[<span class="number">0</span>]</span><br><span class="line">      <span class="comment"># Convert shape from [num examples, rows, columns, depth]</span></span><br><span class="line">      <span class="comment"># to [num examples, rows*columns] (assuming depth == 1)</span></span><br><span class="line">      <span class="keyword">assert</span> images.shape[<span class="number">3</span>] == <span class="number">1</span></span><br><span class="line">      images = images.reshape(images.shape[<span class="number">0</span>],</span><br><span class="line">                              images.shape[<span class="number">1</span>] * images.shape[<span class="number">2</span>])</span><br><span class="line">      <span class="keyword">if</span> dtype == tf.float32:</span><br><span class="line">        <span class="comment"># Convert from [0, 255] -&gt; [0.0, 1.0].</span></span><br><span class="line">        images = images.astype(numpy.float32)</span><br><span class="line">        images = numpy.multiply(images, <span class="number">1.0</span> / <span class="number">255.0</span>)</span><br><span class="line">    self._images = images</span><br><span class="line">    self._labels = labels</span><br><span class="line">    self._epochs_completed = <span class="number">0</span></span><br><span class="line">    self._index_in_epoch = <span class="number">0</span></span><br><span class="line"><span class="meta">  @property</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">images</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self._images</span><br><span class="line"><span class="meta">  @property</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">labels</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self._labels</span><br><span class="line"><span class="meta">  @property</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">num_examples</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self._num_examples</span><br><span class="line"><span class="meta">  @property</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">epochs_completed</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> self._epochs_completed</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">next_batch</span><span class="params">(self, batch_size, fake_data=False)</span>:</span></span><br><span class="line">    <span class="string">"""Return the next `batch_size` examples from this data set."""</span></span><br><span class="line">    <span class="keyword">if</span> fake_data:</span><br><span class="line">      fake_image = [<span class="number">1</span>] * <span class="number">784</span></span><br><span class="line">      <span class="keyword">if</span> self.one_hot:</span><br><span class="line">        fake_label = [<span class="number">1</span>] + [<span class="number">0</span>] * <span class="number">9</span></span><br><span class="line">      <span class="keyword">else</span>:</span><br><span class="line">        fake_label = <span class="number">0</span></span><br><span class="line">      <span class="keyword">return</span> [fake_image <span class="keyword">for</span> _ <span class="keyword">in</span> xrange(batch_size)], [</span><br><span class="line">          fake_label <span class="keyword">for</span> _ <span class="keyword">in</span> xrange(batch_size)]</span><br><span class="line">    start = self._index_in_epoch</span><br><span class="line">    self._index_in_epoch += batch_size</span><br><span class="line">    <span class="keyword">if</span> self._index_in_epoch &gt; self._num_examples:</span><br><span class="line">      <span class="comment"># Finished epoch</span></span><br><span class="line">      self._epochs_completed += <span class="number">1</span></span><br><span class="line">      <span class="comment"># Shuffle the data</span></span><br><span class="line">      perm = numpy.arange(self._num_examples)</span><br><span class="line">      numpy.random.shuffle(perm)</span><br><span class="line">      self._images = self._images[perm]</span><br><span class="line">      self._labels = self._labels[perm]</span><br><span class="line">      <span class="comment"># Start next epoch</span></span><br><span class="line">      start = <span class="number">0</span></span><br><span class="line">      self._index_in_epoch = batch_size</span><br><span class="line">      <span class="keyword">assert</span> batch_size &lt;= self._num_examples</span><br><span class="line">    end = self._index_in_epoch</span><br><span class="line">    <span class="keyword">return</span> self._images[start:end], self._labels[start:end]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_data_sets</span><span class="params">(train_dir, fake_data=False, one_hot=False, dtype=tf.float32)</span>:</span></span><br><span class="line">  <span class="class"><span class="keyword">class</span> <span class="title">DataSets</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line">  data_sets = DataSets()</span><br><span class="line">  <span class="keyword">if</span> fake_data:</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fake</span><span class="params">()</span>:</span></span><br><span class="line">      <span class="keyword">return</span> DataSet([], [], fake_data=<span class="keyword">True</span>, one_hot=one_hot, dtype=dtype)</span><br><span class="line">    data_sets.train = fake()</span><br><span class="line">    data_sets.validation = fake()</span><br><span class="line">    data_sets.test = fake()</span><br><span class="line">    <span class="keyword">return</span> data_sets</span><br><span class="line">  TRAIN_IMAGES = <span class="string">'train-images-idx3-ubyte.gz'</span></span><br><span class="line">  TRAIN_LABELS = <span class="string">'train-labels-idx1-ubyte.gz'</span></span><br><span class="line">  TEST_IMAGES = <span class="string">'t10k-images-idx3-ubyte.gz'</span></span><br><span class="line">  TEST_LABELS = <span class="string">'t10k-labels-idx1-ubyte.gz'</span></span><br><span class="line">  VALIDATION_SIZE = <span class="number">5000</span></span><br><span class="line">  local_file = maybe_download(TRAIN_IMAGES, train_dir)</span><br><span class="line">  train_images = extract_images(local_file)</span><br><span class="line">  local_file = maybe_download(TRAIN_LABELS, train_dir)</span><br><span class="line">  train_labels = extract_labels(local_file, one_hot=one_hot)</span><br><span class="line">  local_file = maybe_download(TEST_IMAGES, train_dir)</span><br><span class="line">  test_images = extract_images(local_file)</span><br><span class="line">  local_file = maybe_download(TEST_LABELS, train_dir)</span><br><span class="line">  test_labels = extract_labels(local_file, one_hot=one_hot)</span><br><span class="line">  validation_images = train_images[:VALIDATION_SIZE]</span><br><span class="line">  validation_labels = train_labels[:VALIDATION_SIZE]</span><br><span class="line">  train_images = train_images[VALIDATION_SIZE:]</span><br><span class="line">  train_labels = train_labels[VALIDATION_SIZE:]</span><br><span class="line">  data_sets.train = DataSet(train_images, train_labels, dtype=dtype)</span><br><span class="line">  data_sets.validation = DataSet(validation_images, validation_labels,</span><br><span class="line">                                 dtype=dtype)</span><br><span class="line">  data_sets.test = DataSet(test_images, test_labels, dtype=dtype)</span><br><span class="line">  <span class="keyword">return</span> data_sets</span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>How to add an tags or categories?</title>
      <link href="/2018/08/18/How-to-add-an-tags-or-categories/"/>
      <url>/2018/08/18/How-to-add-an-tags-or-categories/</url>
      <content type="html"><![CDATA[<p>If you want to add an tag such as  <code>Hexo</code> and the categorie we choose is <code>tutorial</code>, just add some change like this</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line">- Hexo</span><br><span class="line">categories: </span><br><span class="line">- tutorial</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> tutorial </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Begin</title>
      <link href="/2018/08/17/Begin/"/>
      <url>/2018/08/17/Begin/</url>
      <content type="html"><![CDATA[<p>开始。。。</p><a id="more"></a><p><strong>终于可以用了。</strong></p><p><strong>！！！</strong></p><p>如下图</p><p>为了几个空格。。。</p><p>崩溃了</p>]]></content>
      
      <categories>
          
          <category> start </category>
          
      </categories>
      
      
        <tags>
            
            <tag> begin </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
